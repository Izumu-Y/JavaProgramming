# 对象和类
1.区别

||||
| --- | --- | --- |
|对象|状态(描述属性)，(方法)|具体的，一个对象是类的一个实例|
|类|模板|抽象化|

2.基本组成

数据域（定义变量）

方法（动作）

构造方法（调用以后生成一个新的对象）

```
class ClassName{
    成员变量
}
ClassName（）{
    局部变量
}
MethodName（）{
    局部变量
}
```
变量区别

|  |定义位置|初始化|调用位置|生命周期|别名|
| --- | --- | --- | --- | --- | --- |
|成员变量|定义在类中，方法外|默认有初始值，必须被初始化|整个类都可以访问，存在于对象所在的堆内存中|与对象同时存在|实例变量|
|局部变量|定义在构造方法和方法中|没有默认初始值，先定义后使用|只在所属的区域内有效，存在于栈内存中，作用范围结束，变量空间会自动释放|与方法同时存在|  |
|静态变量|在类中，由static修饰|默认有初始值|方法区|与类同时存在|类变量，全局变量|

3.构造函数构造对象

构造方法和所在的类名字必须相同

构造方法没有返回类型

构造方法是在创建一个对象使用new操作符时被调用，构造方法的作用是初始化对象

Circle（声明对象类型） mycircle（对象名）= new （创建对象） Circle（创建后将对象的引用赋值给这个变量）

4.访问对象的数据方法

实例化对象new

访问类中的变量~.~;

访问类中过的方法~.~(参数);

5.数据的权限控制

|形容|作用|可以控制的范围|
| --- | --- | --- |
|public|公有的|类本身和任何包内的类都可以访问|
|private|私有的|只有类本身可以访问|
|protected|受保护的|可以被类，同包子类，不同包子类，同包非子类访问|
|default(friendly)|默认值|可以被类同包子类，同包非子类访问|

6.数据域的封装

对数据域使用private修饰